data types: undefined, null, boolean, string, symbol, bigint, number, object

var myVar => declare a variable
let myVar => variable name declared with let can be used only ones, with var it is overwriten
const myConstVar => constant cannot be changed after init


console.log("Alan Peter".length); -> find out the length of string...
array.push() -> push something at the end of the array
array.pop() -> remove and return the last element from array
array.shift() -> remove and return the first element from an array
array.unshift(element)->add element to the beginning of array 

function functionName(){
} ->create function

== -> convert then compare
=== -> strinct compare, no type conversion

objects
const objectName = {
  property1: "prop",
  property2: 2;
};

accessing objectName.property1 or objectName["property2"] both do the same but if property has a space in the name have to use brackets
adding properties -> objectName.property3 = "prop3";
removing properties -> delete objectName.property3;
objectName.hasOwnProperty(propertyName) -> returns true/false depending if objectName has the property or not

data structures
const structure = [
optionalName:{
  object with properties 1,
  [ array in object
  ]
 },
 {
 object with properties 2
 }
];   -> it behaves as JSON accessing with chaining dots and names an so on..

for and while loops as in java...
